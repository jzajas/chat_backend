services:
  chat-app:
    build: .
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/chat
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=password
      
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379

      - SPRING_PROFILES_ACTIVE=docker
      
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=false
      
#      - CHAT_MAX_MESSAGE_SIZE=1024
#      - CHAT_MAX_USERS_PER_ROOM=100
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - chat-network
#    volumes:
#      - ./logs:/app/logs
#    healthcheck:
#      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
#      interval: 30s
#      timeout: 10s
#      retries: 3
#      start_period: 60s

  postgres:
    image: postgres:17-alpine
    environment:
      POSTGRES_DB: chat
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
#      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - chat-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d chat"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - chat-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

#  nginx:
#    image: nginx:alpine
#    ports:
#      - "80:80"
#      - "443:443"
#    volumes:
#      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
##      - ./nginx/ssl:/etc/nginx/ssl  # SSL certificates
#    depends_on:
#      - chat-app
#    restart: unless-stopped
#    networks:
#      - chat-network
#    profiles:
#      - production

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  chat-network:
    driver: bridge
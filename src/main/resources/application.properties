spring.application.name=chat backend

server.port=8080

spring.profiles.active=docker

management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always

spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://postgres:5432/chatapp}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:user}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:password}
spring.datasource.driver-class-name=org.postgresql.Driver

spring.redis.host=${SPRING_REDIS_HOST:redis}
spring.redis.port=${SPRING_REDIS_PORT:6379}

spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:update}
spring.jpa.show-sql=${SPRING_JPA_SHOW_SQL:false}
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect


# Local


# spring.datasource.url=jdbc:h2:mem:db
# spring.datasource.username=username
# spring.datasource.password=password
# spring.datasource.driver-class-name=org.h2.Driver
# spring.jpa.hibernate.ddl-auto=create-drop

#chat.max-message-size=${CHAT_MAX_MESSAGE_SIZE:1024}
#chat.max-users-per-room=${CHAT_MAX_USERS_PER_ROOM:100}

#logging.level.com.yourpackage=DEBUG
#logging.level.org.springframework.web.socket=DEBUG
#logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
#logging.file.name=logs/chat-app.log